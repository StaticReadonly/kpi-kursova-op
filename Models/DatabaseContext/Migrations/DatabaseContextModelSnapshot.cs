// <auto-generated />
using System;
using Kursova.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kursova.DatabaseContext.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.DbModels.OfferModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar");

                    b.Property<Guid>("OffererId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasPrecision(20, 2)
                        .HasColumnType("numeric(20,2)");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.Property<Guid>("TenderId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OffererId");

                    b.HasIndex("StateId");

                    b.HasIndex("TenderId");

                    b.ToTable("Offer", (string)null);
                });

            modelBuilder.Entity("Models.DbModels.OfferStateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("OffersState", (string)null);
                });

            modelBuilder.Entity("Models.DbModels.TenderModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<decimal>("Cost")
                        .HasPrecision(20, 2)
                        .HasColumnType("numeric(20,2)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("ExecuterId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExecuterId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("StateId");

                    b.ToTable("Tender", (string)null);
                });

            modelBuilder.Entity("Models.DbModels.TenderStateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TenderState", (string)null);
                });

            modelBuilder.Entity("Models.DbModels.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<string>("Patronimyc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Models.DbModels.OfferModel", b =>
                {
                    b.HasOne("Models.DbModels.UserModel", "Offerer")
                        .WithMany("Offers")
                        .HasForeignKey("OffererId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.DbModels.OfferStateModel", "State")
                        .WithMany("Offers")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.DbModels.TenderModel", "Tender")
                        .WithMany("Offers")
                        .HasForeignKey("TenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offerer");

                    b.Navigation("State");

                    b.Navigation("Tender");
                });

            modelBuilder.Entity("Models.DbModels.TenderModel", b =>
                {
                    b.HasOne("Models.DbModels.UserModel", "Executer")
                        .WithMany("CompletedTenders")
                        .HasForeignKey("ExecuterId");

                    b.HasOne("Models.DbModels.UserModel", "Owner")
                        .WithMany("Tenders")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.DbModels.TenderStateModel", "State")
                        .WithMany("Tenders")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Executer");

                    b.Navigation("Owner");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Models.DbModels.OfferStateModel", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("Models.DbModels.TenderModel", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("Models.DbModels.TenderStateModel", b =>
                {
                    b.Navigation("Tenders");
                });

            modelBuilder.Entity("Models.DbModels.UserModel", b =>
                {
                    b.Navigation("CompletedTenders");

                    b.Navigation("Offers");

                    b.Navigation("Tenders");
                });
#pragma warning restore 612, 618
        }
    }
}
